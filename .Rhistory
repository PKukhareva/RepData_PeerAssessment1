library(swirl)
q()
2+7
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
dirj()
dir()
bye()
install.packages("RMySQL")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDb);
result
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
allTables [1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2;");
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query, n=10);dbClearResult(query)
affyMis <- fetch(query); quantile(affyMis$misMatches)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n=10);dbClearResult(query)
dim(affyMisSmall)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rdf5)
library(rdf5)
library(hdf5)
library(rhdf5)
created = h5create("example.h5")
created = h5create("example.h5", "foo")
created = h5create("example.h5", "baa")
created = h5create("example.h5", "foo/foobaa")
created = h5createFile("example.h5")
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10,nr=5,nc=2)
h5write(A, "example.h5","foo/A")
B = array(seq(0.1,2.0,by=0.1),dim=c(5,2,2))
attr(B, "scale") <-"liter"
h5ls("example.h5")
df=data.frame(1L:5L,seq(0,1,length.out=5),
c("ab","cde","fghi","a","s"),stringsAsFactors=FALSE)
h5write(df,"example.h5","df")
h5ls("example.h5")
readA = h5read("example.h5","foo/A"
readA
readA
readA = h5read("example.h5","foo/A")
readA
h5write(c(12,13,14),"example.h5","foo/A",index=list(1:3,1))
h5read("example.h5","foo/A")
htmlCode = readLines(con)
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
close(con)
#Parsing with XML
library(XML)
html <- htmlTreeParse(url, useInternalNodes = T)
xpathSApply(html, "title", xmlValue)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes = T)
install.packages("xtable")
?print
require(readr)
myData <- read_csv("activity.zip")
setwd("C:/Users/Polina/Google Drive/data-science-coursera/reproducible research/RepData_PeerAssessment1")
myData <- read_csv("activity.zip")
hist(myData)
hist(myData$steps)
?mean
mean(myData$steps, na.rm = TRUE)
head(myData)
require(dplyr)
library(dplyr)
sumData <- myData %>%
group_by(interval) %>%
summarise(count=n(),
avg.interval=mean(interval,na.rm=TRUE))
head(sumData)
sumData <- myData %>%
group_by(interval) %>%
summarise(count=n(),
avg.steps=mean(steps,na.rm=TRUE))
head(sumData)
plot(sumData$interval, sumData$avg.steps, type="l", xlab= "Years", ylab= "Intensity of problem(normalized between 0-1)", col="green" , lwd=2)
plot(sumData$interval, sumData$avg.steps, type="l", xlab= "Interval (mins)", ylab= "Average steps", col="green" , lwd=2)
sumData[which.max(sumData$avg.steps),1]
sum(is.na(myData))
sum(is.na(myData$steps))
sum(is.na(myData$interval))
sum(is.na(myData$date))
install.packages("mice")
md.pattern(myData)
library(mice)
md.pattern(myData)
install.packages("VIM")
mice_plot <- aggr(myData, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(myData), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
library(VIM)
mice_plot <- aggr(myData, col=c('navyblue','yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(myData), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
imputed_Data <- mice(myData, m=1, maxit = 50, method = 'pmm', seed = 500)
imputed_Data <- mice(myData, m=2, maxit = 50, method = 'pmm', seed = 500)
?mice
imputedData <- mice(myData)
imputedData <- mice(myData$steps)
mean(myData$steps, na.rm = TRUE)
head(myData)
imputedData <- mice(myData, meth=c('pmm','sample','sample'))
imputedData <- mice(myData, maxit=0)
completeData <- complete(imputedData,1)
imputedData <- mice(myData, maxit=1)
md.pattern(myData)
imputedData <- mice(myData[,c(1,3)], maxit=1)
completeData <- complete(imputedData,1)
md.pattern(completeData)
summary(imputedData)
myData$day <- date - as.Date(c("2012-10-01"))
myData$day <- myData$date - as.Date(c("2012-10-01"))
head(myData)
tail(myData)
imputedData <- mice(myData[,c(1,3, 4)], maxit=1, method = 'pmm', seed = 123)
summary(imputedData)
myData$day <- as.numeric(myData$date - as.Date(c("2012-10-01")))
head(myData)
myData$day <- as.integer(myData$date - as.Date(c("2012-10-01")))
head(myData)
tail(myData)
imputedData <- mice(myData[,c(1,3,4)], maxit=1, method = 'pmm', seed = 123)
summary(imputedData)
completeData <- complete(imputedData, 1)
completeData$date <- day + as.Date(c("2012-10-01"))
completeData$date <- completeData$day + as.Date(c("2012-10-01"))
head(completeData)
tail(completeData)
completeData$weekday <- ifelse(weekdays(completeData$date) %in% c("Saturday", "Sunday"), "weekend", "weekday")
head(completeData)
tail(completeData)
sumCompleteData <- completeData %>%
group_by(interval, weekday) %>%
summarise(avg.steps=mean(steps,na.rm=TRUE))
ggplot(data=completeData, aes(x=interval, y=avg.steps, group=weekday, color=weekday))
+ geom_line()
library(ggplot2)
ggplot(data=completeData, aes(x=interval, y=avg.steps, group=weekday, color=weekday))
+ geom_line()
ggplot(data=sumCompleteData, aes(x=interval, y=avg.steps, group=weekday))
+ geom_line()
ggplot(data=sumCompleteData, aes(x=interval, y=avg.steps, group=weekday))
+ geom_line()
+ facet_wrap(~ weekday, ncol = 1)
library(ggplot2)
ggplot(data=sumData, aes(x=interval, y=avg.steps))
+ geom_line()
View(sumCompleteData)
View(sumCompleteData)
ggplot(data=sumCompleteData, aes(x=interval, y=avg.steps, colour = weekday))
+ geom_line()
ggplot(data=sumCompleteData, aes(x=interval, y=avg.steps, colour = weekday))
+ geom_line(stat="identity")
ggplot(data=sumCompleteData, aes(x=interval, y=avg.steps, colour = weekday)) +
geom_line(stat="identity")
ggplot(data=sumCompleteData, aes(x=interval, y=avg.steps, colour = weekday)) +
geom_line(stat="identity") +
facet_wrap(~ weekday, ncol = 1)
knit2html()
library(knitr)
knit2html()
knit2html(PA1_template.Rmd)
knit2html("PA1_template.Rmd")
